{"ast":null,"code":"import _slicedToArray from \"/Users/cnei/trello-todo/trello-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/cnei/trello-todo/trello-clone/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/cnei/trello-todo/trello-clone/src/components/ModalEditForm.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  };\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : null);\n});\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\nexport default function CustomizedDialogs() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Open dialog\"), React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Modal title\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Save changes\"))));\n} // import { Button, Dialog, DialogActions, DialogTitle, IconButton } from \"@material-ui/core\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom\"\n// import { connect } from \"react-redux\";\n// import styled from \"styled-components\";\n// import TrelloButton from \"./TrelloButton\";\n// import TrelloForm from \"./TrelloForm\";\n// const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n//     '& .MuiDialogContent-root': {\n//         padding: theme.spacing(2),\n//     },\n//     '& .MuiDialogActions-root': {\n//         padding: theme.spacing(1),\n//     },\n// }));\n// const BootstrapDialogTitle = (props) => {\n//     const { children, onClose, ...other } = props;\n//     return (\n//         <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n//             {children}\n//             {onClose ? (\n//                 <IconButton\n//                     aria-label=\"close\"\n//                     onClick={onClose}\n//                     sx={{\n//                         position: 'absolute',\n//                         right: 8,\n//                         top: 8,\n//                         color: (theme) => theme.palette.grey[500],\n//                     }}\n//                 >\n//                     {/* <CloseIcon /> */}\n//                 </IconButton>\n//             ) : null}\n//         </DialogTitle>\n//     );\n// };\n// const ModalEditForm = (open, text, handleChange, closeForm, saveCard) => {\n//     if (!open) return null\n//     const handleClose = () => {\n//         // setOpen(false);\n//     };\n//     return ReactDOM.createPortal(\n//         <div>\n//             <BootstrapDialog\n//                 onClose={handleClose}\n//                 aria-labelledby=\"customized-dialog-title\"\n//                 open={open}\n//             >\n//                 <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n//                     Modal title\n//                 </BootstrapDialogTitle>\n//                 {/* <DialogContent dividers>\n//                     <Typography gutterBottom>\n//                         Cras mattis consectetur puru\n//                     </Typography>\n//                 </DialogContent> */}\n//                 <DialogActions>\n//                     <TrelloForm text={text} onChange={handleChange} closeForm={closeForm}>\n//                         <TrelloButton onClick={saveCard}>Save</TrelloButton>\n//                     </TrelloForm>\n//                     <Button autoFocus onClick={handleClose}>\n//                         Save changes\n//                     </Button>\n//                 </DialogActions>\n//             </BootstrapDialog>\n//         </div>\n//         , document.body)\n// }\n// export default connect()(ModalEditForm);","map":{"version":3,"sources":["/Users/cnei/trello-todo/trello-clone/src/components/ModalEditForm.js"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","useState","open","setOpen","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Open dialog\n            </Button>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Modal title\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n                        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                        in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                    </Typography>\n                    <Typography gutterBottom>\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                        lacus vel augue laoreet rutrum faucibus dolor auctor.\n                    </Typography>\n                    <Typography gutterBottom>\n                        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                        scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                        auctor fringilla.\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Save changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\n// import { Button, Dialog, DialogActions, DialogTitle, IconButton } from \"@material-ui/core\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom\"\n// import { connect } from \"react-redux\";\n// import styled from \"styled-components\";\n// import TrelloButton from \"./TrelloButton\";\n// import TrelloForm from \"./TrelloForm\";\n\n// const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n//     '& .MuiDialogContent-root': {\n//         padding: theme.spacing(2),\n//     },\n//     '& .MuiDialogActions-root': {\n//         padding: theme.spacing(1),\n//     },\n// }));\n\n// const BootstrapDialogTitle = (props) => {\n//     const { children, onClose, ...other } = props;\n\n//     return (\n//         <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n//             {children}\n//             {onClose ? (\n//                 <IconButton\n//                     aria-label=\"close\"\n//                     onClick={onClose}\n//                     sx={{\n//                         position: 'absolute',\n//                         right: 8,\n//                         top: 8,\n//                         color: (theme) => theme.palette.grey[500],\n//                     }}\n//                 >\n//                     {/* <CloseIcon /> */}\n//                 </IconButton>\n//             ) : null}\n//         </DialogTitle>\n//     );\n// };\n\n// const ModalEditForm = (open, text, handleChange, closeForm, saveCard) => {\n//     if (!open) return null\n\n//     const handleClose = () => {\n//         // setOpen(false);\n//     };\n\n//     return ReactDOM.createPortal(\n//         <div>\n//             <BootstrapDialog\n//                 onClose={handleClose}\n//                 aria-labelledby=\"customized-dialog-title\"\n//                 open={open}\n//             >\n//                 <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n//                     Modal title\n//                 </BootstrapDialogTitle>\n//                 {/* <DialogContent dividers>\n//                     <Typography gutterBottom>\n//                         Cras mattis consectetur puru\n//                     </Typography>\n//                 </DialogContent> */}\n//                 <DialogActions>\n//                     <TrelloForm text={text} onChange={handleChange} closeForm={closeForm}>\n//                         <TrelloButton onClick={saveCard}>Save</TrelloButton>\n//                     </TrelloForm>\n//                     <Button autoFocus onClick={handleClose}>\n//                         Save changes\n//                     </Button>\n//                 </DialogActions>\n//             </BootstrapDialog>\n//         </div>\n//         , document.body)\n// }\n\n\n// export default connect()(ModalEditForm);\n\n"]},"metadata":{},"sourceType":"module"}