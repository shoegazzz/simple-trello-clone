{"ast":null,"code":"import _toConsumableArray from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CONSTANTS } from \"../actions\";\nvar initialState = {};\n\nvar listsReducer = function listsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      {\n        var _action$payload = action.payload,\n            title = _action$payload.title,\n            id = _action$payload.id;\n        var newList = {\n          title: title,\n          id: \"list-\".concat(id),\n          cards: []\n        };\n\n        var newState = _objectSpread({}, state, _defineProperty({}, \"list-\".concat(id), newList));\n\n        return newState;\n      }\n\n    case CONSTANTS.ADD_CARD:\n      {\n        var _action$payload2 = action.payload,\n            listID = _action$payload2.listID,\n            _id = _action$payload2.id;\n        var list = state[listID];\n        list.cards.push(\"card-\".concat(_id));\n        return _objectSpread({}, state, _defineProperty({}, listID, list));\n      }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      var _action$payload3 = action.payload,\n          droppableIdStart = _action$payload3.droppableIdStart,\n          droppableIdEnd = _action$payload3.droppableIdEnd,\n          droppableIndexEnd = _action$payload3.droppableIndexEnd,\n          droppableIndexStart = _action$payload3.droppableIndexStart,\n          type = _action$payload3.type;\n\n      if (type === \"list\") {\n        return state;\n      }\n\n      if (droppableIdStart === droppableIdEnd) {\n        var _list$cards;\n\n        var _list = state[droppableIdStart];\n\n        var card = _list.cards.splice(droppableIndexStart, 1);\n\n        (_list$cards = _list.cards).splice.apply(_list$cards, [droppableIndexEnd, 0].concat(_toConsumableArray(card)));\n\n        return _objectSpread({}, state, _defineProperty({}, droppableIdStart, _list));\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        var _listEnd$cards, _objectSpread5;\n\n        var listStart = state[droppableIdStart];\n\n        var _card = listStart.cards.splice(droppableIndexStart, 1);\n\n        var listEnd = state[droppableIdEnd];\n\n        (_listEnd$cards = listEnd.cards).splice.apply(_listEnd$cards, [droppableIndexEnd, 0].concat(_toConsumableArray(_card)));\n\n        return _objectSpread({}, state, (_objectSpread5 = {}, _defineProperty(_objectSpread5, droppableIdStart, listStart), _defineProperty(_objectSpread5, droppableIdEnd, listEnd), _objectSpread5));\n      }\n\n      return state;\n\n    case CONSTANTS.DELETE_CARD:\n      {\n        var _action$payload4 = action.payload,\n            _listID = _action$payload4.listID,\n            _id2 = _action$payload4.id;\n        var _list2 = state[_listID];\n\n        var newCards = _list2.cards.filter(function (cardID) {\n          return cardID !== _id2;\n        });\n\n        return _objectSpread({}, state, _defineProperty({}, _listID, _objectSpread({}, _list2, {\n          cards: newCards\n        })));\n      }\n\n    case CONSTANTS.EDIT_LIST_TITLE:\n      {\n        var _action$payload5 = action.payload,\n            _listID2 = _action$payload5.listID,\n            newTitle = _action$payload5.newTitle;\n        var _list3 = state[_listID2];\n        _list3.title = newTitle;\n        return _objectSpread({}, state, _defineProperty({}, _listID2, _list3));\n      }\n\n    case CONSTANTS.DELETE_LIST:\n      {\n        var _listID3 = action.payload.listID;\n        var _newState = state;\n        delete _newState[_listID3];\n        return _newState;\n      }\n\n    case CONSTANTS.CLEAR_APP:\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;","map":{"version":3,"sources":["/Users/cnei/test/src/reducers/listsReducer.js"],"names":["CONSTANTS","initialState","listsReducer","state","action","type","ADD_LIST","payload","title","id","newList","cards","newState","ADD_CARD","listID","list","push","DRAG_HAPPENED","droppableIdStart","droppableIdEnd","droppableIndexEnd","droppableIndexStart","card","splice","listStart","listEnd","DELETE_CARD","newCards","filter","cardID","EDIT_LIST_TITLE","newTitle","DELETE_LIST","CLEAR_APP"],"mappings":"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","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      if (type === \"list\") {\n        return state;\n      }\n\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state[droppableIdStart];\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        const listEnd = state[droppableIdEnd];\n\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n"]},"metadata":{},"sourceType":"module"}