{"ast":null,"code":"import _slicedToArray from \"/Users/cnei/trello-todo/trello-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cnei/trello-todo/trello-clone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cnei/trello-todo/trello-clone/src/components/TrelloCard.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  display: none;\\n  right: 5px;\\n  bottom: 5px;\\n  opacity: 0.5;\\n  \", \":hover & {\\n    display: block;\\n    cursor: pointer;\\n  }\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  display: none;\\n  right: 5px;\\n  top: 5px;\\n  opacity: 0.5;\\n  \", \":hover & {\\n    display: block;\\n    cursor: pointer;\\n  }\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 0 8px 0;\\n  position: relative;\\n  max-width: 100%;\\n  word-wrap: break-word;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\nvar CardContainer = styled.div(_templateObject());\nvar EditButton = styled(Icon)(_templateObject2(), CardContainer);\nvar DeleteButton = styled(Icon)(_templateObject3(), CardContainer);\nvar TrelloCard = React.memo(function (_ref) {\n  var text = _ref.text,\n      id = _ref.id,\n      listID = _ref.listID,\n      index = _ref.index,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var handleDeleteCard = function handleDeleteCard(e) {\n    dispatch(deleteCard(id, listID));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Draggable, {\n    draggableId: String(id),\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, function (provided) {\n    return React.createElement(CardContainer, Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      onDoubleClick: function onDoubleClick() {\n        return setIsEditing(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(EditButton, {\n      onMouseDown: function onMouseDown() {\n        return setIsEditing(true);\n      },\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"edit\"), React.createElement(DeleteButton, {\n      fontSize: \"small\",\n      onMouseDown: handleDeleteCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"delete\"), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, text))));\n  }), React.createElement(ModalEditForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n});\nexport default connect()(TrelloCard);\n\nvar ModalEditForm = function ModalEditForm() {\n  return React.createPortal(React.createElement(React.Fragment, null), document.body);\n};","map":{"version":3,"sources":["/Users/cnei/trello-todo/trello-clone/src/components/TrelloCard.js"],"names":["React","useState","Card","Typography","CardContent","Draggable","styled","Icon","TrelloForm","editCard","deleteCard","connect","TrelloButton","CardContainer","div","EditButton","DeleteButton","TrelloCard","memo","text","id","listID","index","dispatch","isEditing","setIsEditing","handleDeleteCard","e","String","provided","draggableProps","dragHandleProps","innerRef","ModalEditForm","createPortal","document","body"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,YAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAV,mBAAnB;AAOA,IAAMC,UAAU,GAAGT,MAAM,CAACC,IAAD,CAAT,qBAMZM,aANY,CAAhB;AAeA,IAAMG,YAAY,GAAGV,MAAM,CAACC,IAAD,CAAT,qBAMdM,aANc,CAAlB;AAeA,IAAMI,UAAU,GAAGjB,KAAK,CAACkB,IAAN,CAAW,gBAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCC,EAAkC,QAAlCA,EAAkC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACrCtB,QAAQ,CAAC,KAAD,CAD6B;AAAA;AAAA,MAChEuB,SADgE;AAAA,MACrDC,YADqD;;AAIvE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC,EAAI;AAC5BJ,IAAAA,QAAQ,CAACb,UAAU,CAACU,EAAD,EAAKC,MAAL,CAAX,CAAR;AACD,GAFD;;AAKA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEO,MAAM,CAACR,EAAD,CAA9B;AAAoC,IAAA,KAAK,EAAEE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAO,QAAQ;AAAA,WACP,oBAAC,aAAD,oBACMA,QAAQ,CAACC,cADf,EAEMD,QAAQ,CAACE,eAFf;AAGE,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAHhB;AAIE,MAAA,aAAa,EAAE;AAAA,eAAMP,YAAY,CAAC,IAAD,CAAlB;AAAA,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE;AAAA,eAAMA,YAAY,CAAC,IAAD,CAAlB;AAAA,OADf;AAEE,MAAA,QAAQ,EAAC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAC,OAAvB;AAA+B,MAAA,WAAW,EAAEC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaP,IAAb,CADF,CAVF,CANF,CADO;AAAA,GADX,CADF,EA0BE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD,CAvCkB,CAAnB;AAyCA,eAAeR,OAAO,GAAGM,UAAH,CAAtB;;AAGA,IAAMgB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAE1B,SAAOjC,KAAK,CAACkC,YAAN,CAAmB,yCAAnB,EACFC,QAAQ,CAACC,IADP,CAAP;AAED,CAJD","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  const handleDeleteCard = e => {\n    dispatch(deleteCard(id, listID));\n  };\n\n\n  return (\n    <>\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n      <ModalEditForm />\n    </>\n  );\n});\n\nexport default connect()(TrelloCard);\n\n\nconst ModalEditForm = () => {\n\n  return React.createPortal(<>\n  </>, document.body)\n}\n"]},"metadata":{},"sourceType":"module"}