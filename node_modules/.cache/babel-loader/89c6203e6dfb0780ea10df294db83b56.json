{"ast":null,"code":"import _defineProperty from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/cnei/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { CONSTANTS } from \"../actions\";\nvar initialState = {};\n\nvar boardsReducer = function boardsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      {\n        var _action$payload = action.payload,\n            boardID = _action$payload.boardID,\n            id = _action$payload.id;\n        var board = state[boardID];\n        var newListID = \"list-\".concat(id);\n        var newLists = [].concat(_toConsumableArray(board.lists), [newListID]);\n        board.lists = newLists;\n        return _objectSpread({}, state, _defineProperty({}, boardID, board));\n      }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      {\n        var _boardID = action.payload.boardID;\n        var _board = state[_boardID];\n        var lists = _board.lists;\n        var _action$payload2 = action.payload,\n            droppableIndexEnd = _action$payload2.droppableIndexEnd,\n            droppableIndexStart = _action$payload2.droppableIndexStart,\n            type = _action$payload2.type;\n\n        if (type === \"list\") {\n          var pulledOutList = lists.splice(droppableIndexStart, 1);\n          lists.splice.apply(lists, [droppableIndexEnd, 0].concat(_toConsumableArray(pulledOutList)));\n          _board.lists = lists;\n          return _objectSpread({}, state, _defineProperty({}, _boardID, _board));\n        }\n\n        return state;\n      }\n\n    case CONSTANTS.DELETE_LIST:\n      {\n        var _action$payload3 = action.payload,\n            listID = _action$payload3.listID,\n            _boardID2 = _action$payload3.boardID;\n        var _board2 = state[_boardID2];\n        var _lists = _board2.lists;\n\n        var _newLists = _lists.filter(function (id) {\n          return id !== listID;\n        });\n\n        _board2.lists = _newLists;\n        return _objectSpread({}, state, _defineProperty({}, _boardID2, _board2));\n      }\n\n    case CONSTANTS.ADD_BOARD:\n      {\n        var _action$payload4 = action.payload,\n            title = _action$payload4.title,\n            _id = _action$payload4.id;\n        var newID = \"board-\".concat(_id);\n        var newBoard = {\n          id: newID,\n          title: title,\n          lists: []\n        };\n        return _objectSpread({}, state, _defineProperty({}, newID, newBoard));\n      }\n\n    case CONSTANTS.CLEAR_APP:\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;","map":{"version":3,"sources":["/Users/cnei/test/src/reducers/boardsReducer.js"],"names":["CONSTANTS","initialState","boardsReducer","state","action","type","ADD_LIST","payload","boardID","id","board","newListID","newLists","lists","DRAG_HAPPENED","droppableIndexEnd","droppableIndexStart","pulledOutList","splice","DELETE_LIST","listID","filter","ADD_BOARD","title","newID","newBoard","CLEAR_APP"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,YAA1B;AAEA,IAAMC,YAAY,GAAG,EAArB;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAS,CAACM,QAAf;AAAyB;AAAA,8BACCF,MAAM,CAACG,OADR;AAAA,YACfC,OADe,mBACfA,OADe;AAAA,YACNC,EADM,mBACNA,EADM;AAEvB,YAAMC,KAAK,GAAGP,KAAK,CAACK,OAAD,CAAnB;AACA,YAAMG,SAAS,kBAAWF,EAAX,CAAf;AACA,YAAMG,QAAQ,gCAAOF,KAAK,CAACG,KAAb,IAAoBF,SAApB,EAAd;AACAD,QAAAA,KAAK,CAACG,KAAN,GAAcD,QAAd;AACA,iCAAYT,KAAZ,sBAAoBK,OAApB,EAA8BE,KAA9B;AACD;;AAED,SAAKV,SAAS,CAACc,aAAf;AAA8B;AAAA,YACpBN,QADoB,GACRJ,MAAM,CAACG,OADC,CACpBC,OADoB;AAE5B,YAAME,MAAK,GAAGP,KAAK,CAACK,QAAD,CAAnB;AACA,YAAMK,KAAK,GAAGH,MAAK,CAACG,KAApB;AAH4B,+BASxBT,MAAM,CAACG,OATiB;AAAA,YAK1BQ,iBAL0B,oBAK1BA,iBAL0B;AAAA,YAM1BC,mBAN0B,oBAM1BA,mBAN0B;AAAA,YAQ1BX,IAR0B,oBAQ1BA,IAR0B;;AAW5B,YAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,cAAMY,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAaF,mBAAb,EAAkC,CAAlC,CAAtB;AACAH,UAAAA,KAAK,CAACK,MAAN,OAAAL,KAAK,GAAQE,iBAAR,EAA2B,CAA3B,4BAAiCE,aAAjC,GAAL;AACAP,UAAAA,MAAK,CAACG,KAAN,GAAcA,KAAd;AAEA,mCAAYV,KAAZ,sBAAoBK,QAApB,EAA8BE,MAA9B;AACD;;AACD,eAAOP,KAAP;AACD;;AACD,SAAKH,SAAS,CAACmB,WAAf;AAA4B;AAAA,+BACEf,MAAM,CAACG,OADT;AAAA,YAClBa,MADkB,oBAClBA,MADkB;AAAA,YACVZ,SADU,oBACVA,OADU;AAE1B,YAAME,OAAK,GAAGP,KAAK,CAACK,SAAD,CAAnB;AACA,YAAMK,MAAK,GAAGH,OAAK,CAACG,KAApB;;AACA,YAAMD,SAAQ,GAAGC,MAAK,CAACQ,MAAN,CAAa,UAAAZ,EAAE;AAAA,iBAAIA,EAAE,KAAKW,MAAX;AAAA,SAAf,CAAjB;;AACAV,QAAAA,OAAK,CAACG,KAAN,GAAcD,SAAd;AACA,iCAAYT,KAAZ,sBAAoBK,SAApB,EAA8BE,OAA9B;AACD;;AAED,SAAKV,SAAS,CAACsB,SAAf;AAA0B;AAAA,+BACFlB,MAAM,CAACG,OADL;AAAA,YAChBgB,KADgB,oBAChBA,KADgB;AAAA,YACTd,GADS,oBACTA,EADS;AAExB,YAAMe,KAAK,mBAAYf,GAAZ,CAAX;AACA,YAAMgB,QAAQ,GAAG;AACfhB,UAAAA,EAAE,EAAEe,KADW;AAEfD,UAAAA,KAAK,EAALA,KAFe;AAGfV,UAAAA,KAAK,EAAE;AAHQ,SAAjB;AAMA,iCAAYV,KAAZ,sBAAoBqB,KAApB,EAA4BC,QAA5B;AACD;;AAED,SAAKzB,SAAS,CAAC0B,SAAf;AAA0B;AACxB,eAAOzB,YAAP;AACD;;AAED;AACE,aAAOE,KAAP;AAxDJ;AA0DD,CA3DD;;AA6DA,eAAeD,aAAf","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n"]},"metadata":{},"sourceType":"module"}