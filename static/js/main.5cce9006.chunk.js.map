{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","CLEAR_APP","initialState","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","cards","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","cardsReducer","newCard","newText","boardsReducer","board","newListID","newLists","lists","pulledOutList","newID","newBoard","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","onFocus","e","target","select","value","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","TrelloBoard_templateObject","TrelloBoard","onDragEnd","result","destination","source","match","params","listOrder","href","direction","listCards","components_TrelloList","Thumbnail","BoardThumbnail_templateObject","Title","BoardThumbnail_templateObject2","BoardThumbnail","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","CreateInput","Home_templateObject4","CreateButton","button","Home_templateObject5","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","handleClick","react_router_dom","to","textDecoration","components_BoardThumbnail","Fragment","textAlign","AppRouter","react_router","path","exact","component","Home","App","routes","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cce9006.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\",\n  CLEAR_APP: \"CLEAR_APP\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      if (type === \"list\") {\n        return state;\n      }\n\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state[droppableIdStart];\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        const listEnd = state[droppableIdEnd];\n\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    case CONSTANTS.CLEAR_APP: {\n      return initialState\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    const handleFocus = e => {\n      e.target.select();\n    };\n    \n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            onFocus={handleFocus}\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n  const handleDeleteCard = e => {\n    dispatch(deleteCard(id, listID));\n  };\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Button } from \"@material-ui/core\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Button href=\"/\" variant=\"contained\">\n          Go Back\n        </Button>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n\nexport const clearApp = () => {\n  return {\n    type: CONSTANTS.CLEAR_APP\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background: #a6d5f7;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px grey;\n`;\n\nconst Title = styled.h4`\n  color: #012742;\n  text-decoration: none;\n`;\n\nconst BoardThumbnail = ({ title }) => {\n  return (\n    <Thumbnail>\n      <Title>{title}</Title>\n    </Thumbnail>\n  );\n};\n\nexport default BoardThumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard, clearApp } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst CreateButton = styled.button`\n  width: 300px;\n  height: 70px;\n  font-size: 22px;\n  margin-top: 40px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 0 2px 4px grey;\n`;\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n  };\n\n  const handleClick = () => {\n    dispatch(clearApp())\n  }\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <>\n        <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n          <CreateTitle>Create a new Board</CreateTitle>\n          <CreateInput\n            onChange={handleChange}\n            value={newBoardTitle}\n            placeholder=\"Your boards title...\"\n            type=\"text\"\n          />\n        </form>\n        <CreateButton onClick={handleClick}>Clear app</CreateButton>\n      </>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={TrelloBoard} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #6baddb;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}